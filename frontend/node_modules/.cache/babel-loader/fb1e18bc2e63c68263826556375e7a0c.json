{"ast":null,"code":"var _jsxFileName = \"/home/chukwunazaekpere/Documents/Fullstack/javascript/NodeJS/cobble/frontend/src/components/Modal.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { formDataAction, toggleConfirmAction, toggleModalAction } from '../redux/actions/appActions';\nimport \"../styles/ModalStyles.css\";\nimport { inputs } from '../validators';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Modal = props => {\n  _s();\n\n  console.log(\"\\n\\t Modal...\");\n  const dispatch = useDispatch();\n  const store = useSelector(store => store);\n  const {\n    modalStatus,\n    confirmStatus\n  } = store;\n  const {\n    showModal\n  } = modalStatus;\n  const {\n    showConfirm\n  } = confirmStatus;\n  console.log(\"\\n\\t showModal: \", showModal);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [formData, setFormData] = useState({\n    \"Accomodation Status\": '',\n    \"Rent Amount\": 0,\n    \"Monthly Income\": 0,\n    \"Payment Plan\": \"\"\n  });\n  const accStat = [\"Select accomodation status\", \"Self Contain\", \"Two Bedrooms\", \"Three Bedrooms\"];\n  const paymentPlan = [\"Select payment plan\", \"Thirty days\", \"Fourty-five days\", \"Sixty-five days\"];\n  const actionBtns = [\"Preview\", \"Cancel\"];\n  const fieldTypes = ['select', 'input', 'input', 'select'];\n\n  const handleInputChange = (field, value) => {\n    console.log(\"\\n\\t formData: \", formData);\n    const newData = formData;\n    newData[field] = value;\n    setFormData({ ...newData\n    });\n    setErrorMessage(\"\");\n  };\n\n  const previewFormData = () => {\n    const report = inputs(Object.keys(formData), Object.values(formData));\n    if (report) return setErrorMessage(report);\n    dispatch(formDataAction(formData));\n    dispatch(toggleModalAction(false));\n    dispatch(toggleConfirmAction(true));\n  };\n\n  useEffect(() => {\n    setFormDataPreview({\n      \"Accomodation Status\": props.formData[\"Accomodation Status\"],\n      \"Monthly Income\": props.formData[\"Monthly Income\"],\n      \"Payment Plan\": props.formData[\"Payment Plan\"],\n      \"Rent Amount\": props.formData[\"Rent Amount\"]\n    });\n  }, [props.formData]);\n  console.log(\"\\n\\t formData: \", formData);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal d-flex justify-content-center align-items-center ml-5 animate__animated animate__bounce\",\n    role: \"dialog\",\n    id: \"modal\",\n    tabIndex: -1,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-dialog\",\n      role: \"\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"modal-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-teal-500 text-2xl font-serif\",\n            children: \"Fill in the required details below\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 119\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"modal-body\",\n          children: [errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-2md text-center font-weight-bold text-red-700 font-serif my-3\",\n            children: errorMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 29\n          }, this), Object.keys(formData).map((name, index) => /*#__PURE__*/_jsxDEV(\"section\", {\n            children: fieldTypes[index] === \"select\" ? /*#__PURE__*/_jsxDEV(\"article\", {\n              className: \"form-select form-group \",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"font-serif text-sm align-start d-flex\",\n                htmlFor: \"\",\n                children: [name, \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                onChange: e => handleInputChange(name, e.target.value),\n                className: \"font-serif form-control\",\n                name: \"\",\n                id: \"\",\n                children: name.toLowerCase().includes('payment') ? paymentPlan.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n                  className: \"font-serif\",\n                  value: item.toLowerCase().includes(\"select\") ? \"\" : item,\n                  children: item\n                }, item, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 61\n                }, this)) : accStat.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n                  className: \"font-serif\",\n                  value: item.toLowerCase().includes(\"select\") ? \"\" : item,\n                  children: item\n                }, item, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 61\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 49\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 45\n            }, this) : /*#__PURE__*/_jsxDEV(\"article\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"font-serif text-sm align-start d-flex\",\n                htmlFor: \"\",\n                children: [name, \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                onChange: e => handleInputChange(name, e.target.value),\n                type: \"number\",\n                min: 1,\n                placeholder: `Enter ${name}`,\n                className: \"font-serif form-control\",\n                defaultValue: formData && (name.toLowerCase().includes('income') || name.toLowerCase().includes('amount')) ? \"\" : formData[name]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 49\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 45\n            }, this)\n          }, name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 33\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"modal-footer\",\n          children: actionBtns.map(btns => /*#__PURE__*/_jsxDEV(\"button\", {\n            \"data-target\": \"#modal\",\n            \"data-toggle\": \"modal\",\n            onClick: () => previewFormData(),\n            \"data-dismiss\": `${btns.toLowerCase() === 'cancel' ? 'modal' : undefined}`,\n            className: `font-serif btn ${btns.toLowerCase() === 'cancel' ? 'btn-secondary' : 'btn-info'} text-white`,\n            children: btns\n          }, btns, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Modal, \"KXybCxlqvM2U5V+F5c1E6dVwEpM=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Modal;\nexport default Modal;\n\nvar _c;\n\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"sources":["/home/chukwunazaekpere/Documents/Fullstack/javascript/NodeJS/cobble/frontend/src/components/Modal.tsx"],"names":["React","useState","useDispatch","useSelector","formDataAction","toggleConfirmAction","toggleModalAction","inputs","Modal","props","console","log","dispatch","store","modalStatus","confirmStatus","showModal","showConfirm","errorMessage","setErrorMessage","formData","setFormData","accStat","paymentPlan","actionBtns","fieldTypes","handleInputChange","field","value","newData","previewFormData","report","Object","keys","values","useEffect","setFormDataPreview","map","name","index","e","target","toLowerCase","includes","item","btns","undefined"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { formDataAction, toggleConfirmAction, toggleModalAction } from '../redux/actions/appActions';\nimport \"../styles/ModalStyles.css\"\nimport { inputs } from '../validators';\n\n\ninterface Props {\n    formData: any\n}\n\nexport interface FormDataInterface {\n    \"Accomodation Status\": string, \n    \"Rent Amount\": number , \n    \"Monthly Income\": number, \n    \"Payment Plan\": string\n    [key: string]: string | number\n}\n\nconst Modal = (props: Props) => {\n    console.log(\"\\n\\t Modal...\")\n    const dispatch = useDispatch();\n    const store = useSelector((store: any) => store)\n    const { modalStatus, confirmStatus } = store;\n    const { showModal } = modalStatus;\n    const { showConfirm } = confirmStatus;\n\n    console.log(\"\\n\\t showModal: \", showModal)\n    const [errorMessage, setErrorMessage] = useState(\"\")\n    const [formData, setFormData] = useState<FormDataInterface>({\n        \"Accomodation Status\": '', \n        \"Rent Amount\": 0, \n        \"Monthly Income\": 0, \n        \"Payment Plan\": \"\"\n    })\n  \n    const accStat = [\"Select accomodation status\", \"Self Contain\", \"Two Bedrooms\", \"Three Bedrooms\"]\n    const paymentPlan = [\"Select payment plan\", \"Thirty days\", \"Fourty-five days\", \"Sixty-five days\"]\n    const actionBtns = [\"Preview\", \"Cancel\"];\n    const fieldTypes = ['select', 'input', 'input', 'select']\n    const handleInputChange = (field: string, value: string | number) => {\n        console.log(\"\\n\\t formData: \", formData)\n        const newData = formData;\n        newData[field] = value;\n        setFormData({\n            ...newData\n        });\n        setErrorMessage(\"\")\n    };\n    const previewFormData = () => {\n        const report = inputs(Object.keys(formData), Object.values(formData))\n        if(report) return setErrorMessage(report);\n        dispatch(formDataAction(formData))\n        dispatch(toggleModalAction(false));\n        dispatch(toggleConfirmAction(true))\n    };\n    useEffect(() => {\n        setFormDataPreview({\n            \"Accomodation Status\": props.formData[\"Accomodation Status\"],\n            \"Monthly Income\": props.formData[\"Monthly Income\"],\n            \"Payment Plan\": props.formData[\"Payment Plan\"],\n            \"Rent Amount\": props.formData[\"Rent Amount\"]\n        })\n    }, [props.formData])\n    console.log(\"\\n\\t formData: \", formData)\n    return (\n        <div className=\"modal d-flex justify-content-center align-items-center ml-5 animate__animated animate__bounce\"  role=\"dialog\" id=\"modal\" tabIndex={-1}>\n            \n            <div className=\"modal-dialog\" role=\"\">\n                <div className=\"modal-content\">\n                    <section className=\"modal-header\">\n                        <span className=\"text-teal-500 text-2xl font-serif\">Fill in the required details below</span> <br />\n                    </section>\n                    <section className=\"modal-body\">\n                        {\n                            errorMessage &&\n                            <p className=\"text-2md text-center font-weight-bold text-red-700 font-serif my-3\">{errorMessage}</p>\n                        }\n                        {\n                            Object.keys(formData).map((name, index) => (\n                                <section key={name}>\n                                    {\n                                        fieldTypes[index] === \"select\" ?\n                                            <article className=\"form-select form-group \">\n                                                <label className=\"font-serif text-sm align-start d-flex\" htmlFor=\"\">{name}:</label>\n                                                <select \n                                                    onChange={e => handleInputChange(name, e.target.value)}\n                                                    className=\"font-serif form-control\" name=\"\" id=\"\">\n                                                    {\n                                                        name.toLowerCase().includes('payment') ?\n                                                        paymentPlan.map(item => (\n                                                            <option  className=\"font-serif\" key={item} value={item.toLowerCase().includes(\"select\") ? \"\" : item}>{item}</option>\n                                                        ))\n                                                        :\n                                                        accStat.map(item => (\n                                                            <option className=\"font-serif\" key={item} value={item.toLowerCase().includes(\"select\") ? \"\" : item}>{item}</option>\n                                                        ))\n                                                    }\n                                                </select>\n                                            </article>\n                                            :\n                                            <article className=\"form-group\">\n                                                <label className=\"font-serif text-sm align-start d-flex\" htmlFor=\"\">{name}:</label>\n                                                <input \n                                                    onChange={e => handleInputChange(name, e.target.value)}\n                                                    type=\"number\" \n                                                    min={1} \n                                                    placeholder={`Enter ${name}`} \n                                                    className=\"font-serif form-control\" \n                                                    defaultValue={formData && (name.toLowerCase().includes('income') || name.toLowerCase().includes('amount')) ? \"\" : formData[name]}\n                                                />\n                                            </article>\n                                    }\n                                </section>\n                            ))\n                        }\n                    </section>\n                    <section className=\"modal-footer\">\n                        {\n                            actionBtns.map(btns => (\n                                <button \n                                    key={btns} \n                                    data-target=\"#modal\"\n                                    data-toggle=\"modal\"\n                                    onClick={() => previewFormData()}\n                                    data-dismiss={`${btns.toLowerCase() === 'cancel' ? 'modal' : undefined }`}\n                                    className={`font-serif btn ${btns.toLowerCase() === 'cancel' ? 'btn-secondary' : 'btn-info'} text-white`}>\n                                    {btns}\n                                </button>\n                            ))\n                        }\n                    </section>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Modal;\n\n\n"]},"metadata":{},"sourceType":"module"}