{"ast":null,"code":"export const inputs = (keys, values) => {\n  let count = 0;\n\n  for (let entery of values) {\n    if (!entery) {\n      return `Please enter an input for ${keys[count]}`;\n    }\n\n    count++;\n  }\n};\nexport const titleCase = word => {\n  let desiredString = \"\";\n\n  if (typeof word === \"string\") {\n    const trimmedWord = word.trim();\n    let ww = trimmedWord[0].toUpperCase();\n    let charIndex = 0;\n\n    for (let char of trimmedWord.substring(1)) {\n      if (char === \" \") {\n        ww.concat(char, trimmedWord[charIndex + 1].toUpperCase());\n        charIndex += 2;\n      } else {\n        // console.log(\"\\n\\t desired-string ww: \", char, trimmedWord[charIndex], ww)\n        ww += char;\n        charIndex++;\n      }\n    }\n\n    ;\n    desiredString += ww;\n  }\n\n  ;\n  return desiredString;\n};\nexport const pascalCaseSeparator = word => {\n  const titleCasedWord = titleCase(word); // console.log(\"\\n\\t Word: \", word, titleCasedWord)\n\n  let requiredWord = \"\";\n  let count = 0;\n\n  for (let char of titleCasedWord) {\n    if (count !== 0) {\n      // console.log(\"\\n\\t char: \", char)\n      if (char === char.toUpperCase()) {\n        requiredWord += \" \" + char;\n      } else {\n        requiredWord += char;\n      }\n    } else {\n      requiredWord += char.toUpperCase();\n    }\n\n    count++;\n  } // console.log(\"\\n\\t requiredWord: \", requiredWord)\n\n\n  return requiredWord;\n};","map":{"version":3,"sources":["/home/chukwunazaekpere/Documents/Fullstack/javascript/NodeJS/cobble/frontend/src/validators/index.ts"],"names":["inputs","keys","values","count","entery","titleCase","word","desiredString","trimmedWord","trim","ww","toUpperCase","charIndex","char","substring","concat","pascalCaseSeparator","titleCasedWord","requiredWord"],"mappings":"AAEA,OAAO,MAAMA,MAAM,GAAG,CAACC,IAAD,EAAiBC,MAAjB,KAAiD;AACnE,MAAIC,KAAK,GAAG,CAAZ;;AACA,OAAI,IAAIC,MAAR,IAAkBF,MAAlB,EAAyB;AACrB,QAAG,CAACE,MAAJ,EAAW;AACP,aAAQ,6BAA4BH,IAAI,CAACE,KAAD,CAAQ,EAAhD;AACH;;AACDA,IAAAA,KAAK;AACR;AACJ,CARM;AAYP,OAAO,MAAME,SAAS,GAAIC,IAAD,IAA6B;AAClD,MAAIC,aAAa,GAAG,EAApB;;AACA,MAAG,OAAOD,IAAP,KAAiB,QAApB,EAA6B;AACzB,UAAME,WAAW,GAAGF,IAAI,CAACG,IAAL,EAApB;AAEA,QAAIC,EAAE,GAAGF,WAAW,CAAC,CAAD,CAAX,CAAeG,WAAf,EAAT;AACA,QAAIC,SAAS,GAAG,CAAhB;;AACA,SAAI,IAAIC,IAAR,IAAgBL,WAAW,CAACM,SAAZ,CAAsB,CAAtB,CAAhB,EAAyC;AACrC,UAAGD,IAAI,KAAK,GAAZ,EAAgB;AACZH,QAAAA,EAAE,CAACK,MAAH,CAAUF,IAAV,EAAgBL,WAAW,CAACI,SAAS,GAAC,CAAX,CAAX,CAAyBD,WAAzB,EAAhB;AACAC,QAAAA,SAAS,IAAI,CAAb;AACH,OAHD,MAGK;AACD;AACAF,QAAAA,EAAE,IAAIG,IAAN;AACAD,QAAAA,SAAS;AACZ;AACJ;;AAAA;AACDL,IAAAA,aAAa,IAAIG,EAAjB;AACH;;AAAA;AACD,SAAOH,aAAP;AACH,CApBM;AAuBP,OAAO,MAAMS,mBAAmB,GAAIV,IAAD,IAAkB;AACjD,QAAMW,cAAc,GAAGZ,SAAS,CAACC,IAAD,CAAhC,CADiD,CAEjD;;AACA,MAAIY,YAAY,GAAG,EAAnB;AACA,MAAIf,KAAK,GAAG,CAAZ;;AACA,OAAI,IAAIU,IAAR,IAAgBI,cAAhB,EAA+B;AAC3B,QAAGd,KAAK,KAAK,CAAb,EAAe;AACX;AACA,UAAGU,IAAI,KAAKA,IAAI,CAACF,WAAL,EAAZ,EAA+B;AAC3BO,QAAAA,YAAY,IAAI,MAAML,IAAtB;AACH,OAFD,MAEK;AACDK,QAAAA,YAAY,IAAIL,IAAhB;AACH;AACJ,KAPD,MAOK;AACDK,MAAAA,YAAY,IAAIL,IAAI,CAACF,WAAL,EAAhB;AACH;;AACDR,IAAAA,KAAK;AACR,GAjBgD,CAkBjD;;;AACA,SAAOe,YAAP;AACH,CApBM","sourcesContent":["\n\nexport const inputs = (keys: string[], values: (string | number)[]) => {\n    let count = 0;\n    for(let entery of values){\n        if(!entery){\n            return `Please enter an input for ${keys[count]}`\n        }\n        count++\n    }\n}\n\n\n\nexport const titleCase = (word: string | string[]) => {\n    let desiredString = \"\";\n    if(typeof(word) === \"string\"){\n        const trimmedWord = word.trim();\n        \n        let ww = trimmedWord[0].toUpperCase()\n        let charIndex = 0;\n        for(let char of trimmedWord.substring(1)){\n            if(char === \" \"){\n                ww.concat(char, trimmedWord[charIndex+1].toUpperCase());\n                charIndex += 2;\n            }else{\n                // console.log(\"\\n\\t desired-string ww: \", char, trimmedWord[charIndex], ww)\n                ww += char;\n                charIndex++;\n            }\n        };\n        desiredString += ww;\n    };\n    return desiredString\n}\n\n\nexport const pascalCaseSeparator = (word: string) => {\n    const titleCasedWord = titleCase(word);\n    // console.log(\"\\n\\t Word: \", word, titleCasedWord)\n    let requiredWord = \"\";\n    let count = 0;\n    for(let char of titleCasedWord){\n        if(count !== 0){\n            // console.log(\"\\n\\t char: \", char)\n            if(char === char.toUpperCase()){\n                requiredWord += \" \" + char;\n            }else{\n                requiredWord += char;\n            }\n        }else{\n            requiredWord += char.toUpperCase()\n        }\n        count ++\n    }\n    // console.log(\"\\n\\t requiredWord: \", requiredWord)\n    return requiredWord;\n}"]},"metadata":{},"sourceType":"module"}