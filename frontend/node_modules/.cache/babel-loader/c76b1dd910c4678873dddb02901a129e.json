{"ast":null,"code":"var _jsxFileName = \"/home/chukwunazaekpere/Documents/Fullstack/javascript/NodeJS/cobble/frontend/src/components/Confirm.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toggleConfirmAction, toggleModalAction } from '../redux/actions/appActions';\nimport \"../styles/ModalStyles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Confirm = props => {\n  _s();\n\n  console.log(\"\\n\\t Confirm...\");\n  const dispatch = useDispatch();\n  const store = useSelector(store => store);\n  const [formDataPreview, setFormDataPreview] = useState({\n    \"Accomodation Status\": '',\n    \"Rent Amount\": 0,\n    \"Monthly Income\": 0,\n    \"Payment Plan\": \"\"\n  });\n\n  const toggleModal = action => {\n    if (action.toLowerCase() === 'edit') {\n      dispatch(toggleConfirmAction(false));\n      dispatch(toggleModalAction(true));\n    }\n  };\n\n  useEffect(() => {\n    setFormDataPreview({\n      \"Accomodation Status\": props.formData[\"Accomodation Status\"],\n      \"Monthly Income\": props.formData[\"Monthly Income\"],\n      \"Payment Plan\": props.formData[\"Payment Plan\"],\n      \"Rent Amount\": props.formData[\"Rent Amount\"]\n    });\n  }, [props.formData]);\n  const actionBtns = [\"Continue\", \"Edit\"];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal d-flex justify-content-center align-items-center ml-5 animate__animated animate__bounce\",\n    role: \"dialog\",\n    id: \"modal\",\n    tabIndex: -1,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-dialog\",\n      role: \"\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"modal-header\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \" text-teal-500 text-2xl font-serif\",\n            children: \"Please confirm the inputted details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"modal-body\",\n          children: formDataPreview && Object.keys(formDataPreview).map(data => /*#__PURE__*/_jsxDEV(\"article\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"font-serif\",\n              children: [data, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"font-serif\",\n              htmlFor: \"\",\n              children: parseInt(formDataPreview[data]).toLocaleString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 37\n            }, this)]\n          }, data, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"modal-footer\",\n          children: actionBtns.map(btns => /*#__PURE__*/_jsxDEV(\"button\", {\n            \"data-target\": \"#modal\",\n            \"data-toggle\": \"modal\",\n            onClick: () => toggleModal(btns),\n            \"data-dismiss\": `${btns.toLowerCase() === 'cancel' ? 'modal' : undefined}`,\n            className: `font-serif btn ${btns.toLowerCase() === 'cancel' ? 'btn-secondary' : 'btn-info'} text-white`,\n            children: btns\n          }, btns, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Confirm, \"cUNcKRRMe8x2WyI9zNpVdXNd898=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Confirm;\nexport default Confirm;\n\nvar _c;\n\n$RefreshReg$(_c, \"Confirm\");","map":{"version":3,"sources":["/home/chukwunazaekpere/Documents/Fullstack/javascript/NodeJS/cobble/frontend/src/components/Confirm.tsx"],"names":["React","useEffect","useState","useDispatch","useSelector","toggleConfirmAction","toggleModalAction","Confirm","props","console","log","dispatch","store","formDataPreview","setFormDataPreview","toggleModal","action","toLowerCase","formData","actionBtns","Object","keys","map","data","parseInt","toLocaleString","btns","undefined"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toggleConfirmAction, toggleModalAction } from '../redux/actions/appActions';\nimport \"../styles/ModalStyles.css\"\nimport { FormDataInterface } from './Modal';\n\n\ninterface Props {\n    formData: any\n}\n\nconst Confirm = (props: Props) => {\n    console.log(\"\\n\\t Confirm...\")\n    const dispatch = useDispatch();\n    const store = useSelector((store: any) => store)\n    const [formDataPreview, setFormDataPreview] = useState<FormDataInterface>({\n        \"Accomodation Status\": '', \n        \"Rent Amount\": 0, \n        \"Monthly Income\": 0, \n        \"Payment Plan\": \"\"\n    })\n\n    const toggleModal = (action: string) => {\n        if(action.toLowerCase() === 'edit'){\n            dispatch(toggleConfirmAction(false))\n            dispatch(toggleModalAction(true));\n        }\n    }\n  \n    useEffect(() => {\n        setFormDataPreview({\n            \"Accomodation Status\": props.formData[\"Accomodation Status\"],\n            \"Monthly Income\": props.formData[\"Monthly Income\"],\n            \"Payment Plan\": props.formData[\"Payment Plan\"],\n            \"Rent Amount\": props.formData[\"Rent Amount\"]\n        })\n    }, [props.formData])\n    const actionBtns = [\"Continue\", \"Edit\"];\n    return (\n        <div className=\"modal d-flex justify-content-center align-items-center ml-5 animate__animated animate__bounce\"  role=\"dialog\" id=\"modal\" tabIndex={-1}>\n            <div className=\"modal-dialog\" role=\"\">\n                <div className=\"modal-content\">\n                    <section className=\"modal-header\">\n                        <p className=\" text-teal-500 text-2xl font-serif\">Please confirm the inputted details</p>\n                    </section>\n                    <section className=\"modal-body\">\n                        {\n                            formDataPreview && Object.keys(formDataPreview).map(data => (\n                                <article key={data}>\n                                    <p className=\"font-serif\">{data}:</p>\n                                    <label className=\"font-serif\" htmlFor=\"\">{parseInt (formDataPreview[data]).toLocaleString()}</label>\n                                    <hr />\n                                </article>\n                            ))\n                        }\n                    </section>\n                    <section className=\"modal-footer\">\n                        {\n                            actionBtns.map(btns => (\n                                <button \n                                    key={btns} \n                                    data-target=\"#modal\"\n                                    data-toggle=\"modal\"\n                                    onClick={() => toggleModal(btns)}\n                                    data-dismiss={`${btns.toLowerCase() === 'cancel' ? 'modal' : undefined }`}\n                                    className={`font-serif btn ${btns.toLowerCase() === 'cancel' ? 'btn-secondary' : 'btn-info'} text-white`}>\n                                    {btns}\n                                </button>\n                            ))\n                        }\n                    </section>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Confirm;\n\n\n"]},"metadata":{},"sourceType":"module"}